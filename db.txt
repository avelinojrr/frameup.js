// Ask about the database type to use (SQL or NoSQL)
    const databaseType = await promptUser({
        name: 'databaseType',
        message: `Select a database type to use: SQL or NoSQL ${chalk.dim('(Use arrow keys)')}`,
        choices: databaseTypesChoice.map(dbType => ({
            name: dbType.name,
            message: dbType.color(dbType.name),
            value: dbType.name
        })),
        result(name) {
            return this.choices.find(choice => choice.name === name).value;
        },
        format(input) {
            const selected = databaseTypesChoice.find(d => d.name === input);
            return selected ? selected.color(input) : input;
        }
    });

    // Ask about the database type segun la elecciÃ³n anterior
    let databaseChoices = databaseType === 'SQL' ? sqlDatabaseChoice : noSqlDatabaseChoice;
    
    stackConfig.database = await promptUser({
        name: 'database',
        message: `Select a database to use: ${chalk.dim('(Use arrow keys)')}`,
        choices: databaseChoices.map(db => ({
            name: db.name,
            message: db.color(db.name),
            value: db.name
        })),
        result(name) {
            return this.choices.find(choice => choice.name === name).value;
        },
        format(input) {
            const selected = databaseChoices.find(d => d.name === input);
            return selected ? selected.color(input) : input;
        }
    })